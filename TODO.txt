Next:

+ ncurses: Select multiple lines
+ editablediffmodel: create class and tests
+ editablediffmodel: modified lines are returned when requested
+ editablediffmodel: EDITED_* status works
+ ncurses: Can copy from one side to the other
+ editablediffmodel: an edit is not an edit if it doesn't change the line
+ editablediffmodel: can save modified files
+ editablediffmodel: write and test EditableDiffModel.has_edit_affecting_side
+ ncurses: header indication that a file is modified
+ editablediffmodel: don't remember edits that don't change anything
+ ncurses: file modified * goes away on save
- ncurses: tests for status messages on next etc.
- ncurses: tests for status messages on save
- editablediffmodel: can add lines
- editablediffmodel: can delete lines
- editablediffmodel: undo/redo works
- ncurses: Can see long lines at bottom? (not short lines)
- ncurses: Long lines at bottom are scrollable
- ncurses: Can edit lines
- ncurses: Can edit long lines because they wrap or scroll
- ncurses: Handle screen resizes - currently you can crash it by resizing
- git: create a script suitable for use as GIT_EXTERNAL_DIFF
- editablediffmodel: allow locking one or both files as non-writeable
- general: return the correct values as used by git?

    * All edits go in a queue of undoable changes in EditableDiffModel.
      The last savepoint is a pointer to somewhere in the queue.  When we
      ask the EditableDiffModel for lines, it gets the original DiffModel
      lines and applies the changes in order.  Any change that occurs after
      the savepoint makes the line be marked as changed (visible in UI).

- diff: improve diff code (use difflib?) so similar lines are shown
  side-by-side.

Next:
- ncurses: some kind of solution for SHIFT-UP and DOWN?  (numeric keypad?)
- ncurses: Special characters to indicate the line continues to the left/right
- ncurses: Highlight added and removed parts of the line in a DIFFERENT row.
- ncurses: Show line number in status bar
- ncurses: Allow moving the vertical divider
- ncurses: Jump to beginning, end and line num (of the file the cursor is in)
- diffmodel: Change line.left and line.right into line.strs[LEFT] etc.
- ncurses: Confirm exit when there are unsaved changes
- filemanager: save to backup files
- filemanager: save to temporary file then rename when finished

Big:

- general: Allow supplying a diff on stdin.  This might mean we can work as a
  GIT_PAGER?  To be really great, we would need to find the filenames in the
  supplied diff (git-style and normal) and look for those files, and use them
  to provide context if they exist.  If they don't exist, use whatever context
  is in the file, and show "... skip x lines ..." for any gaps.
  We would also need to handle multi-file diffs.  Showing all files as one
  side-by-side diff could potentially make us a much better complement to git?

- Make scalable to big files.  DiffModel would only cache a certain number of
  lines, and call into the parser whenever it needed to get some other lines.
  Preferably, we should call the underlying diff program and send its output
  to a fifo, so it's ready if/when we need it.

- Make scalable to long lines?

- Make scalable to large numbers of edits/undos?

- Don't use unified diffs internally since they are not quite as reliable
  as context diffs?  (Because of +++ line problem.)

- Support "align manually" on diffs

- GTK interface

Later/Never:

- editablediffmodel: Cache results instead of recalculating each time?
- git: highlight whitespace at end of lines, and other git diffisms
- ncurses: toggle showing line number
- ncurses: Support different colour schemes: white-on-black, black-on-white?
- ncurses: Allow specifying tab width
- unified diffs: Ignore lines that do not start with a space in unified diffs
- ncurses: Don't redraw whole screen when we are only scrolling one line
- unified diffs: Treat lines beginning +++ that are not hunk beginnings
  (i.e. don't match exactly the +++ file-name date-format regular
  expression) as + lines
- listview: write lines one by one instead of returning a string
- ncurses: redefine keys?
- ncurses: pressing s saves the modified file wherever your cursor is?


